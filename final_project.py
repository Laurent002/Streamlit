import streamlit as st
import pandas as pd
from pandas_datareader import data as pdr
import plotly.express as px
import numpy as np
from PIL import Image


@st.cache(suppress_st_warning=True)
def lit_donn√©es():
        chemin_acc√®s = "s&p500.csv"
        data = pd.read_csv(chemin_acc√®s)
        return data

def param√®tres(df, secteur_par_d√©faut, capitalisation_par_d√©faut):

    ### Secteur ###
    secteurs = [secteur_par_d√©faut] + list(df['sector'].unique())
    secteur = st.sidebar.selectbox("Secteur d'activit√©", secteurs, index=0)

    ### Capitalisation ###
    liste_capitalisation = [capitalisation_par_d√©faut] + ["Petite", "Moyenne", "Grande"]
    capitalisation = st.sidebar.selectbox("Capitalisation", liste_capitalisation, index=0)

    ### Dividende ###
    dividende = st.sidebar.slider("Taux de dividende entre : (%)", 0.0, 10.0, value=(0.0, 10.0))

    ### Profit ###
    profit_min, profit_max = float(df['profitMargins_%'].min()), float(df['profitMargins_%'].max())
    profit = st.sidebar.slider("Marge de profit plus grande que : (%)", profit_min, profit_max, step=10.0)

    return secteur, capitalisation, dividende, profit


def filtrage(df, secteur_par_d√©faut, capitalisation_par_d√©faut, secteur, capitalisation, dividende, profit):
#    filtering(df_sp,sector_default_val,cap_default_val,option_sector,dividend_value,profit_value,cap_value):
 
     ### Secteur ###
    if secteur != secteur_par_d√©faut:
        df = df[(df['sector'] == secteur)]
        

    ### Capitalisation ###
    if capitalisation != capitalisation_par_d√©faut:
        if capitalisation == 'Petite':
            df = df[(df['marketCap'] >= 0) & (df['marketCap'] <= 20e9)]
        elif capitalisation == 'Moyenne':
            df = df[(df['marketCap'] > 20e9) & (df['marketCap'] <= 100e9)]
        elif capitalisation == 'Grande':
            df = df[(df['marketCap'] > 100e9)]



    ### Dividende
    df = df[(df['dividendYield_%'] >= dividende[0]) & (df['dividendYield_%'] <= dividende[1])]

    ### Profit ###
    df = df[(df['profitMargins_%'] >= profit)]

    return df

def prix_entreprise(df, option_entreprise):
    if option_entreprise != None:
        ticker_entreprise = df.loc[df['name'] == option_entreprise, 'ticker'].values[0]
        donn√©e_prix = pdr.get_data_yahoo(ticker_entreprise, start='2011-12-31', end = '2022-12-01')['Adj Close']
        donn√©e_prix = donn√©e_prix.reset_index(drop=False)
        donn√©e_prix.columns = ['ds', 'y']
        return donn√©e_prix
    return None
    

def √©volution_court_action(prix):
    figure = px.line(prix, x='ds', y='y', title="Court de l'action sur 10 ans")
    figure.update_xaxes(title_text = 'Date')
    figure.update_yaxes(title_text = "Prix de l'action")
    st.plotly_chart(figure)
    return

def  m√©triques(prix):
    prix_action_2012 = prix.loc[prix['ds'] == '2012-01-03', 'y'].values[0]
    prix_action_2022 = prix.loc[prix['ds'] == '2022-12-01', 'y'].values[0]
    performance = np.around((prix_action_2022/prix_action_2012 - 1)*100, 2)
    return prix_action_2022, performance



if __name__ == "__main__":
    st.set_page_config(
        page_title="Mon projet Streamlit",
        page_icon="üìà",
        initial_sidebar_state="expanded"
    )

st.title("Analyse et visualisation S&P500")
st.sidebar.title("Crit√®res de recherche")

image = Image.open("stock.jpeg")
_, colonne_image_2, _ = st.columns([1,3,1])
with colonne_image_2:
       st.image(image, caption='@austindistel')

df = lit_donn√©es()

secteur_par_d√©faut = 'ALL'
capitalisation_par_d√©faut = 'ALL'
secteur, capitalisation, dividende, profit = param√®tres(df, secteur_par_d√©faut, capitalisation_par_d√©faut)
df = filtrage(df, secteur_par_d√©faut, capitalisation_par_d√©faut, secteur, capitalisation, dividende, profit)

st.subheader("Partie 1 - Visualisation des donn√©es")
with st.expander("Partie 1 - Explication"):
    st.write("""
            Dans la table ci-dessous, vous trouverez la plupart des entreprises du S&P500 (stock market index of the 500 largest American companies) avec certains crit√®res tels que :
                
                - Le nom de la compagnie
                - Le secteur d'activit√©
                - La capitalisation du march√©
                - Le pourcentage de dividende (dividend/stock price)
                - La marge de profit de la compagnie en pourcentage
            
            ‚ö†Ô∏è Ces donn√©es sont pr√©lev√©es de l'API Yahoo finance. ‚ö†Ô∏è

            ‚ÑπÔ∏è Vous pouvez chercher et filter par compagnie avec le filtre sur la gauche. ‚ÑπÔ∏è
          """)

st.write("")
st.write("Nombre d'entreprises dans la table: ", len(df)) 
st.dataframe(df.iloc[:,1:])

### Partie 2 - Choisir une entreprise et afficher ses informations ne temps r√©el ###

st.subheader("Partie 2 - Choisissez une entreprise")
option_entreprise = st.selectbox("Entreprises:", df.name.unique())


### Partie 3 - Afficher les infos en temps r√©el sur l'entreprise s√©lectionn√©e pr√©c√©demment

st.subheader("Partie 3 - Analyse du court de l'action pour l'entreprise {}".format(option_entreprise))
prix = prix_entreprise(df, option_entreprise)
# st.dataframe(prix)


### Graphique de l'√©volution du prix de l'action ###

√©volution_court_action(prix)
prix_action_2022, performance = m√©triques(prix)
col_pr√©diction_1, col_pr√©diction_2 = st.columns([1,2])

with col_pr√©diction_1:
    st.metric(label = "Prix de l'action fin 2022", value=str(np.around(prix_action_2022,2)), delta=str(performance) + '%')
    st.write("Comparaison avec le 3 janvier 2012")

with col_pr√©diction_2:
    with st.expander("Explication de l'analyse", expanded=True):
        st.write ("""
                    Le graphe ci-dessus montre l'√©volution de l'action pour l'entreprise choisie 
                    entre le 31 d√©cembre 2011 et le 1er d√©cembre 2022.

                    L'indicateur est le prix de l'action au 1er d√©cembre 2022 ainsi que son √©volution durant la p√©riode sp√©cifi√©e.

                    Ces donn√©es proviennent de l'API Yahoo Finance.
        """)
